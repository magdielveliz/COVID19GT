<?php

use Drupal\views_content_ds\Collect\FieldCollector;
use Drupal\views_content_ds\Collect\ViewsProcessor;

xautoload()->registerModulePsr4(__FILE__, 'psr4');

/**
 * Implements hook_ds_fields_info()
 *
 * @param string $entity_type
 *
 * @return \array[]
 */
function views_content_ds_ds_fields_info($entity_type = NULL) {

  static $fields;

  if (!isset($fields)) {
    $collector = new FieldCollector();
    $viewsProcessor = new ViewsProcessor(entity_get_info(), $collector);
    $viewsProcessor->processAllViews(views_get_all_views());
    $fields = $collector->getCollectedFields();
  }

  return $fields;
}


/**
 * Callback to render our ds field..
 *
 * @param array $field
 *
 * @return string|null
 *   The rendered view, or NULL.
 */
function _views_content_ds_field_print(array $field) {
  $entity = $field['entity'];
  $entity_type = $field['entity_type'];
  $info = entity_get_info($entity_type);
  $primary = @$info['entity keys']['id'];
  if (empty($primary)) {
    return NULL;
  }
  if (!isset($entity->$primary) || empty($entity->$primary)) {
    return NULL;
  }
  $id = $entity->$primary;
  if (empty($field['_view_id']) || empty($field['_display_id'])) {
    return NULL;
  }
  $view_id = $field['_view_id'];
  $display_id = $field['_display_id'];
  $conf = array(
    'context' => array('argument_entity_id:' . $entity_type . '_1'),
    'override_title' => 0,
    'override_title_text' => '',
  );
  $view = views_get_view($view_id);
  $view->set_display($display_id);
  $view->set_arguments(array($id));
  return $view->preview();
}






